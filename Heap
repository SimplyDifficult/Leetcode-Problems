/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:

    struct compare{
        bool operator()(const ListNode*l, const ListNode*r){
            return l->val>r->val;
        }
    };

    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<ListNode*,vector<ListNode*>,compare>p;
        for(auto l:lists){
            if(l)p.push(l);
        }
        if(p.empty())return NULL;
        ListNode*ans=p.top();
        p.pop();
        if(ans->next)p.push(ans->next);
        ListNode*tail=ans;
        while(!p.empty()){
            tail->next=p.top();
            p.pop();
            tail=tail->next;
            if(tail->next)p.push(tail->next);
        }
        return ans;
    }
};
